# MCP Gateway Configuration
# Documentation: https://github.com/acehoss/mcp-gateway

# Network configuration
hostname: "0.0.0.0"  # Listen on all interfaces (required for Render)
port: ${PORT:-8000}  # Use Render's PORT or default to 8000

# Logging configuration
debug:
  level: "info"  # Options: error, warn, info, debug, verbose

# Authentication (optional - uncomment to enable)
# auth:
#   bearer:
#     enabled: true
#     tokens:
#       - "${MCP_AUTH_TOKEN}"

# MCP Server configurations
servers:
  # Supabase MCP Server
  supabase:
    command: npx
    args:
      - -y
      - "@supabase/mcp-server-supabase"
      - "--read-only"
      - "--project-ref=${SUPABASE_PROJECT_REF}"
    env:
      SUPABASE_ACCESS_TOKEN: "${SUPABASE_ACCESS_TOKEN}"

  # Add more servers here as needed:
  
  # Example: Filesystem MCP Server
  # filesystem:
  #   command: npx
  #   args:
  #     - -y
  #     - "@modelcontextprotocol/server-filesystem"
  #     - "/tmp"
  
  # Example: Git MCP Server
  # git:
  #   command: npx
  #   args:
  #     - -y
  #     - "@modelcontextprotocol/server-git"

  # Example: GitHub MCP Server
  # github:
  #   command: npx
  #   args:
  #     - -y
  #     - "@modelcontextprotocol/server-github"
  #   env:
  #     GITHUB_TOKEN: "${GITHUB_TOKEN}"

# Available MCP Servers to try:
# - @supabase/mcp-server-supabase - Supabase database management
# - @modelcontextprotocol/server-filesystem - File system access
# - @modelcontextprotocol/server-git - Git repository access
# - @modelcontextprotocol/server-github - GitHub API access
# - @modelcontextprotocol/server-postgres - PostgreSQL database
# - mcp-server-fetch - Web scraping and fetching
# - And many more at https://github.com/modelcontextprotocol/servers
